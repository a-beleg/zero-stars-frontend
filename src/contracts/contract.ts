// Generated by @wagmi/cli@1.3.0 on 8/13/2023 at 8:12:23 PM
import {
    useNetwork,
    useContractRead,
    UseContractReadConfig,
    useContractWrite,
    Address,
    UseContractWriteConfig,
    usePrepareContractWrite,
    UsePrepareContractWriteConfig,
    useContractEvent,
    UseContractEventConfig,
} from 'wagmi'
import {
    ReadContractResult,
    WriteContractMode,
    PrepareWriteContractResult,
} from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Zero Stars
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export const zeroStarsABI = [
    {
        stateMutability: 'nonpayable',
        type: 'constructor',
        inputs: [{name: '_endpoint', internalType: 'address', type: 'address'}],
    },
    {type: 'error', inputs: [], name: 'InsufficientGas'},
    {type: 'error', inputs: [], name: 'NotTokenOwner'},
    {
        type: 'event',
        anonymous: false,
        inputs: [
            {
                name: 'owner',
                internalType: 'address',
                type: 'address',
                indexed: true,
            },
            {
                name: 'approved',
                internalType: 'address',
                type: 'address',
                indexed: true,
            },
            {
                name: 'tokenId',
                internalType: 'uint256',
                type: 'uint256',
                indexed: true,
            },
        ],
        name: 'Approval',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            {
                name: 'owner',
                internalType: 'address',
                type: 'address',
                indexed: true,
            },
            {
                name: 'operator',
                internalType: 'address',
                type: 'address',
                indexed: true,
            },
            {name: 'approved', internalType: 'bool', type: 'bool', indexed: false},
        ],
        name: 'ApprovalForAll',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            {
                name: '_srcChainId',
                internalType: 'uint16',
                type: 'uint16',
                indexed: false,
            },
            {
                name: '_srcAddress',
                internalType: 'bytes',
                type: 'bytes',
                indexed: false,
            },
            {
                name: '_nonce',
                internalType: 'uint64',
                type: 'uint64',
                indexed: false,
            },
            {
                name: '_payload',
                internalType: 'bytes',
                type: 'bytes',
                indexed: false,
            },
            {name: '_reason', internalType: 'bytes', type: 'bytes', indexed: false},
        ],
        name: 'MessageFailed',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            {
                name: 'previousOwner',
                internalType: 'address',
                type: 'address',
                indexed: true,
            },
            {
                name: 'newOwner',
                internalType: 'address',
                type: 'address',
                indexed: true,
            },
        ],
        name: 'OwnershipTransferred',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            {
                name: '_srcChainId',
                internalType: 'uint16',
                type: 'uint16',
                indexed: false,
            },
            {
                name: '_from',
                internalType: 'address',
                type: 'address',
                indexed: false,
            },
            {
                name: '_tokenId',
                internalType: 'uint256',
                type: 'uint256',
                indexed: false,
            },
        ],
        name: 'ReceivedNFT',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            {
                name: '_srcChainId',
                internalType: 'uint16',
                type: 'uint16',
                indexed: false,
            },
            {
                name: '_srcAddress',
                internalType: 'bytes',
                type: 'bytes',
                indexed: false,
            },
            {
                name: '_nonce',
                internalType: 'uint64',
                type: 'uint64',
                indexed: false,
            },
            {
                name: '_payloadHash',
                internalType: 'bytes32',
                type: 'bytes32',
                indexed: false,
            },
        ],
        name: 'RetryMessageSuccess',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            {
                name: '_dstChainId',
                internalType: 'uint16',
                type: 'uint16',
                indexed: false,
            },
            {name: '_type', internalType: 'uint16', type: 'uint16', indexed: false},
            {
                name: '_minDstGas',
                internalType: 'uint256',
                type: 'uint256',
                indexed: false,
            },
        ],
        name: 'SetMinDstGas',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            {
                name: 'precrime',
                internalType: 'address',
                type: 'address',
                indexed: false,
            },
        ],
        name: 'SetPrecrime',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            {
                name: '_remoteChainId',
                internalType: 'uint16',
                type: 'uint16',
                indexed: false,
            },
            {name: '_path', internalType: 'bytes', type: 'bytes', indexed: false},
        ],
        name: 'SetTrustedRemote',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            {
                name: '_remoteChainId',
                internalType: 'uint16',
                type: 'uint16',
                indexed: false,
            },
            {
                name: '_remoteAddress',
                internalType: 'bytes',
                type: 'bytes',
                indexed: false,
            },
        ],
        name: 'SetTrustedRemoteAddress',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            {name: 'from', internalType: 'address', type: 'address', indexed: true},
            {name: 'to', internalType: 'address', type: 'address', indexed: true},
            {
                name: 'tokenId',
                internalType: 'uint256',
                type: 'uint256',
                indexed: true,
            },
        ],
        name: 'Transfer',
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'DEFAULT_PAYLOAD_SIZE_LIMIT',
        outputs: [{name: '', internalType: 'uint256', type: 'uint256'}],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'MAX_ID',
        outputs: [{name: '', internalType: 'uint256', type: 'uint256'}],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            {name: 'to', internalType: 'address', type: 'address'},
            {name: 'tokenId', internalType: 'uint256', type: 'uint256'},
        ],
        name: 'approve',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{name: 'owner', internalType: 'address', type: 'address'}],
        name: 'balanceOf',
        outputs: [{name: '', internalType: 'uint256', type: 'uint256'}],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{name: 'tokenId', internalType: 'uint256', type: 'uint256'}],
        name: 'burn',
        outputs: [],
    },
    {
        stateMutability: 'payable',
        type: 'function',
        inputs: [
            {name: 'dstChainId', internalType: 'uint16', type: 'uint16'},
            {name: 'tokenId', internalType: 'uint256', type: 'uint256'},
        ],
        name: 'crossChain',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            {name: 'dstChainId', internalType: 'uint16', type: 'uint16'},
            {name: 'tokenId', internalType: 'uint256', type: 'uint256'},
        ],
        name: 'estimateFees',
        outputs: [{name: '', internalType: 'uint256', type: 'uint256'}],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            {name: '', internalType: 'uint16', type: 'uint16'},
            {name: '', internalType: 'bytes', type: 'bytes'},
            {name: '', internalType: 'uint64', type: 'uint64'},
        ],
        name: 'failedMessages',
        outputs: [{name: '', internalType: 'bytes32', type: 'bytes32'}],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            {name: '_srcChainId', internalType: 'uint16', type: 'uint16'},
            {name: '_srcAddress', internalType: 'bytes', type: 'bytes'},
        ],
        name: 'forceResumeReceive',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{name: 'tokenId', internalType: 'uint256', type: 'uint256'}],
        name: 'getApproved',
        outputs: [{name: '', internalType: 'address', type: 'address'}],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            {name: '_version', internalType: 'uint16', type: 'uint16'},
            {name: '_chainId', internalType: 'uint16', type: 'uint16'},
            {name: '', internalType: 'address', type: 'address'},
            {name: '_configType', internalType: 'uint256', type: 'uint256'},
        ],
        name: 'getConfig',
        outputs: [{name: '', internalType: 'bytes', type: 'bytes'}],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            {name: '_remoteChainId', internalType: 'uint16', type: 'uint16'},
        ],
        name: 'getTrustedRemoteAddress',
        outputs: [{name: '', internalType: 'bytes', type: 'bytes'}],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            {name: 'owner', internalType: 'address', type: 'address'},
            {name: 'operator', internalType: 'address', type: 'address'},
        ],
        name: 'isApprovedForAll',
        outputs: [{name: '', internalType: 'bool', type: 'bool'}],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            {name: '_srcChainId', internalType: 'uint16', type: 'uint16'},
            {name: '_srcAddress', internalType: 'bytes', type: 'bytes'},
        ],
        name: 'isTrustedRemote',
        outputs: [{name: '', internalType: 'bool', type: 'bool'}],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'lzEndpoint',
        outputs: [
            {
                name: '',
                internalType: 'contract ILayerZeroEndpoint',
                type: 'address',
            },
        ],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            {name: '_srcChainId', internalType: 'uint16', type: 'uint16'},
            {name: '_srcAddress', internalType: 'bytes', type: 'bytes'},
            {name: '_nonce', internalType: 'uint64', type: 'uint64'},
            {name: '_payload', internalType: 'bytes', type: 'bytes'},
        ],
        name: 'lzReceive',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            {name: '', internalType: 'uint16', type: 'uint16'},
            {name: '', internalType: 'uint16', type: 'uint16'},
        ],
        name: 'minDstGasLookup',
        outputs: [{name: '', internalType: 'uint256', type: 'uint256'}],
    },
    {
        stateMutability: 'payable',
        type: 'function',
        inputs: [
            {name: 'numberOfTokens', internalType: 'uint256', type: 'uint256'},
        ],
        name: 'mint',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'name',
        outputs: [{name: '', internalType: 'string', type: 'string'}],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            {name: '_srcChainId', internalType: 'uint16', type: 'uint16'},
            {name: '_srcAddress', internalType: 'bytes', type: 'bytes'},
            {name: '_nonce', internalType: 'uint64', type: 'uint64'},
            {name: '_payload', internalType: 'bytes', type: 'bytes'},
        ],
        name: 'nonblockingLzReceive',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'owner',
        outputs: [{name: '', internalType: 'address', type: 'address'}],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{name: 'tokenId', internalType: 'uint256', type: 'uint256'}],
        name: 'ownerOf',
        outputs: [{name: '', internalType: 'address', type: 'address'}],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{name: '', internalType: 'uint16', type: 'uint16'}],
        name: 'payloadSizeLimitLookup',
        outputs: [{name: '', internalType: 'uint256', type: 'uint256'}],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'precrime',
        outputs: [{name: '', internalType: 'address', type: 'address'}],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
    },
    {
        stateMutability: 'payable',
        type: 'function',
        inputs: [
            {name: '_srcChainId', internalType: 'uint16', type: 'uint16'},
            {name: '_srcAddress', internalType: 'bytes', type: 'bytes'},
            {name: '_nonce', internalType: 'uint64', type: 'uint64'},
            {name: '_payload', internalType: 'bytes', type: 'bytes'},
        ],
        name: 'retryMessage',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            {name: 'from', internalType: 'address', type: 'address'},
            {name: 'to', internalType: 'address', type: 'address'},
            {name: 'tokenId', internalType: 'uint256', type: 'uint256'},
        ],
        name: 'safeTransferFrom',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            {name: 'from', internalType: 'address', type: 'address'},
            {name: 'to', internalType: 'address', type: 'address'},
            {name: 'tokenId', internalType: 'uint256', type: 'uint256'},
            {name: 'data', internalType: 'bytes', type: 'bytes'},
        ],
        name: 'safeTransferFrom',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'saleState',
        outputs: [{name: '', internalType: 'uint256', type: 'uint256'}],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            {name: 'operator', internalType: 'address', type: 'address'},
            {name: 'approved', internalType: 'bool', type: 'bool'},
        ],
        name: 'setApprovalForAll',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            {name: '_version', internalType: 'uint16', type: 'uint16'},
            {name: '_chainId', internalType: 'uint16', type: 'uint16'},
            {name: '_configType', internalType: 'uint256', type: 'uint256'},
            {name: '_config', internalType: 'bytes', type: 'bytes'},
        ],
        name: 'setConfig',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            {name: '_dstChainId', internalType: 'uint16', type: 'uint16'},
            {name: '_packetType', internalType: 'uint16', type: 'uint16'},
            {name: '_minGas', internalType: 'uint256', type: 'uint256'},
        ],
        name: 'setMinDstGas',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            {name: '_dstChainId', internalType: 'uint16', type: 'uint16'},
            {name: '_size', internalType: 'uint256', type: 'uint256'},
        ],
        name: 'setPayloadSizeLimit',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{name: '_precrime', internalType: 'address', type: 'address'}],
        name: 'setPrecrime',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{name: '_version', internalType: 'uint16', type: 'uint16'}],
        name: 'setReceiveVersion',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{name: '_id', internalType: 'uint256', type: 'uint256'}],
        name: 'setSaleState',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{name: '_version', internalType: 'uint16', type: 'uint16'}],
        name: 'setSendVersion',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            {name: '_srcChainId', internalType: 'uint16', type: 'uint16'},
            {name: '_path', internalType: 'bytes', type: 'bytes'},
        ],
        name: 'setTrustedRemote',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            {name: '_remoteChainId', internalType: 'uint16', type: 'uint16'},
            {name: '_remoteAddress', internalType: 'bytes', type: 'bytes'},
        ],
        name: 'setTrustedRemoteAddress',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{name: 'interfaceId', internalType: 'bytes4', type: 'bytes4'}],
        name: 'supportsInterface',
        outputs: [{name: '', internalType: 'bool', type: 'bool'}],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'symbol',
        outputs: [{name: '', internalType: 'string', type: 'string'}],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{name: 'index', internalType: 'uint256', type: 'uint256'}],
        name: 'tokenByIndex',
        outputs: [{name: '', internalType: 'uint256', type: 'uint256'}],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            {name: 'owner', internalType: 'address', type: 'address'},
            {name: 'index', internalType: 'uint256', type: 'uint256'},
        ],
        name: 'tokenOfOwnerByIndex',
        outputs: [{name: '', internalType: 'uint256', type: 'uint256'}],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'tokenPrice',
        outputs: [{name: '', internalType: 'uint256', type: 'uint256'}],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{name: 'tokenId', internalType: 'uint256', type: 'uint256'}],
        name: 'tokenURI',
        outputs: [{name: '', internalType: 'string', type: 'string'}],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'totalSupply',
        outputs: [{name: '', internalType: 'uint256', type: 'uint256'}],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            {name: 'from', internalType: 'address', type: 'address'},
            {name: 'to', internalType: 'address', type: 'address'},
            {name: 'tokenId', internalType: 'uint256', type: 'uint256'},
        ],
        name: 'transferFrom',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{name: 'newOwner', internalType: 'address', type: 'address'}],
        name: 'transferOwnership',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{name: '', internalType: 'uint16', type: 'uint16'}],
        name: 'trustedRemoteLookup',
        outputs: [{name: '', internalType: 'bytes', type: 'bytes'}],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [],
        name: 'withdraw',
        outputs: [],
    },
    {stateMutability: 'payable', type: 'receive'},
] as const

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export const zeroStarsAddress = {
    5: '0xBA687095255e51B0FB7BaAa863f158f5224aDfCA',
    280: '0x07bb9324E15F38B64c765e7C95FBEf067518048A',
    421613: '0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab',
} as const

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export const zeroStarsConfig = {
    address: zeroStarsAddress,
    abi: zeroStarsABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsRead<
    TFunctionName extends string,
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"DEFAULT_PAYLOAD_SIZE_LIMIT"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsDefaultPayloadSizeLimit<
    TFunctionName extends 'DEFAULT_PAYLOAD_SIZE_LIMIT',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'DEFAULT_PAYLOAD_SIZE_LIMIT',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"MAX_ID"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsMaxId<
    TFunctionName extends 'MAX_ID',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'MAX_ID',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"balanceOf"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsBalanceOf<
    TFunctionName extends 'balanceOf',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'balanceOf',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"estimateFees"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsEstimateFees<
    TFunctionName extends 'estimateFees',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'estimateFees',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"failedMessages"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsFailedMessages<
    TFunctionName extends 'failedMessages',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'failedMessages',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"getApproved"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsGetApproved<
    TFunctionName extends 'getApproved',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'getApproved',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"getConfig"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsGetConfig<
    TFunctionName extends 'getConfig',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'getConfig',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"getTrustedRemoteAddress"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsGetTrustedRemoteAddress<
    TFunctionName extends 'getTrustedRemoteAddress',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'getTrustedRemoteAddress',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsIsApprovedForAll<
    TFunctionName extends 'isApprovedForAll',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'isApprovedForAll',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"isTrustedRemote"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsIsTrustedRemote<
    TFunctionName extends 'isTrustedRemote',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'isTrustedRemote',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"lzEndpoint"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsLzEndpoint<
    TFunctionName extends 'lzEndpoint',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'lzEndpoint',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"minDstGasLookup"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsMinDstGasLookup<
    TFunctionName extends 'minDstGasLookup',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'minDstGasLookup',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"name"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsName<
    TFunctionName extends 'name',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'name',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"owner"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsOwner<
    TFunctionName extends 'owner',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'owner',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"ownerOf"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsOwnerOf<
    TFunctionName extends 'ownerOf',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'ownerOf',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"payloadSizeLimitLookup"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsPayloadSizeLimitLookup<
    TFunctionName extends 'payloadSizeLimitLookup',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'payloadSizeLimitLookup',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"precrime"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsPrecrime<
    TFunctionName extends 'precrime',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'precrime',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"saleState"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsSaleState<
    TFunctionName extends 'saleState',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'saleState',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsSupportsInterface<
    TFunctionName extends 'supportsInterface',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'supportsInterface',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"symbol"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsSymbol<
    TFunctionName extends 'symbol',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'symbol',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"tokenByIndex"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsTokenByIndex<
    TFunctionName extends 'tokenByIndex',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'tokenByIndex',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"tokenOfOwnerByIndex"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsTokenOfOwnerByIndex<
    TFunctionName extends 'tokenOfOwnerByIndex',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    // const { chain } = useNetwork()
    // const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[280],
        functionName: 'tokenOfOwnerByIndex',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"tokenPrice"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsTokenPrice<
    TFunctionName extends 'tokenPrice',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'tokenPrice',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"tokenURI"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsTokenUri<
    TFunctionName extends 'tokenURI',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'tokenURI',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"totalSupply"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsTotalSupply<
    TFunctionName extends 'totalSupply',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'totalSupply',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"trustedRemoteLookup"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsTrustedRemoteLookup<
    TFunctionName extends 'trustedRemoteLookup',
    TSelectData = ReadContractResult<typeof zeroStarsABI, TFunctionName>,
>(
    config: Omit<
        UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractRead({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'trustedRemoteLookup',
        ...config,
    } as UseContractReadConfig<typeof zeroStarsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsWrite<
    TFunctionName extends string,
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            string
        >['request']['abi'],
        TFunctionName,
        TMode
    > & { address?: Address; chainId?: TChainId }
        : UseContractWriteConfig<typeof zeroStarsABI, TFunctionName, TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, TFunctionName, TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"approve"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsApprove<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'approve'
        >['request']['abi'],
        'approve',
        TMode
    > & { address?: Address; chainId?: TChainId; functionName?: 'approve' }
        : UseContractWriteConfig<typeof zeroStarsABI, 'approve', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approve'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'approve', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'approve',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"burn"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsBurn<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'burn'
        >['request']['abi'],
        'burn',
        TMode
    > & { address?: Address; chainId?: TChainId; functionName?: 'burn' }
        : UseContractWriteConfig<typeof zeroStarsABI, 'burn', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'burn'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'burn', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'burn',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"crossChain"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsCrossChain<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'crossChain'
        >['request']['abi'],
        'crossChain',
        TMode
    > & { address?: Address; chainId?: TChainId; functionName?: 'crossChain' }
        : UseContractWriteConfig<typeof zeroStarsABI, 'crossChain', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'crossChain'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'crossChain', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'crossChain',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"forceResumeReceive"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsForceResumeReceive<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'forceResumeReceive'
        >['request']['abi'],
        'forceResumeReceive',
        TMode
    > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'forceResumeReceive'
    }
        : UseContractWriteConfig<
        typeof zeroStarsABI,
        'forceResumeReceive',
        TMode
    > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'forceResumeReceive'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'forceResumeReceive', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'forceResumeReceive',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"lzReceive"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsLzReceive<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'lzReceive'
        >['request']['abi'],
        'lzReceive',
        TMode
    > & { address?: Address; chainId?: TChainId; functionName?: 'lzReceive' }
        : UseContractWriteConfig<typeof zeroStarsABI, 'lzReceive', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'lzReceive'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'lzReceive', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'lzReceive',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"mint"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsMint<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'mint'
        >['request']['abi'],
        'mint',
        TMode
    > & { address?: Address; chainId?: TChainId; functionName?: 'mint' }
        : UseContractWriteConfig<typeof zeroStarsABI, 'mint', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'mint'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'mint', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'mint',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"nonblockingLzReceive"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsNonblockingLzReceive<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'nonblockingLzReceive'
        >['request']['abi'],
        'nonblockingLzReceive',
        TMode
    > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'nonblockingLzReceive'
    }
        : UseContractWriteConfig<
        typeof zeroStarsABI,
        'nonblockingLzReceive',
        TMode
    > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'nonblockingLzReceive'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'nonblockingLzReceive', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'nonblockingLzReceive',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsRenounceOwnership<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'renounceOwnership'
        >['request']['abi'],
        'renounceOwnership',
        TMode
    > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceOwnership'
    }
        : UseContractWriteConfig<
        typeof zeroStarsABI,
        'renounceOwnership',
        TMode
    > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'renounceOwnership', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'renounceOwnership',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"retryMessage"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsRetryMessage<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'retryMessage'
        >['request']['abi'],
        'retryMessage',
        TMode
    > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'retryMessage'
    }
        : UseContractWriteConfig<typeof zeroStarsABI, 'retryMessage', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'retryMessage'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'retryMessage', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'retryMessage',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsSafeTransferFrom<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'safeTransferFrom'
        >['request']['abi'],
        'safeTransferFrom',
        TMode
    > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
    }
        : UseContractWriteConfig<typeof zeroStarsABI, 'safeTransferFrom', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'safeTransferFrom', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'safeTransferFrom',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsSetApprovalForAll<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'setApprovalForAll'
        >['request']['abi'],
        'setApprovalForAll',
        TMode
    > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
    }
        : UseContractWriteConfig<
        typeof zeroStarsABI,
        'setApprovalForAll',
        TMode
    > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'setApprovalForAll', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'setApprovalForAll',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"setConfig"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsSetConfig<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'setConfig'
        >['request']['abi'],
        'setConfig',
        TMode
    > & { address?: Address; chainId?: TChainId; functionName?: 'setConfig' }
        : UseContractWriteConfig<typeof zeroStarsABI, 'setConfig', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setConfig'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'setConfig', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'setConfig',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"setMinDstGas"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsSetMinDstGas<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'setMinDstGas'
        >['request']['abi'],
        'setMinDstGas',
        TMode
    > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setMinDstGas'
    }
        : UseContractWriteConfig<typeof zeroStarsABI, 'setMinDstGas', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setMinDstGas'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'setMinDstGas', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'setMinDstGas',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"setPayloadSizeLimit"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsSetPayloadSizeLimit<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'setPayloadSizeLimit'
        >['request']['abi'],
        'setPayloadSizeLimit',
        TMode
    > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setPayloadSizeLimit'
    }
        : UseContractWriteConfig<
        typeof zeroStarsABI,
        'setPayloadSizeLimit',
        TMode
    > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setPayloadSizeLimit'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'setPayloadSizeLimit', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'setPayloadSizeLimit',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"setPrecrime"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsSetPrecrime<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'setPrecrime'
        >['request']['abi'],
        'setPrecrime',
        TMode
    > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setPrecrime'
    }
        : UseContractWriteConfig<typeof zeroStarsABI, 'setPrecrime', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setPrecrime'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'setPrecrime', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'setPrecrime',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"setReceiveVersion"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsSetReceiveVersion<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'setReceiveVersion'
        >['request']['abi'],
        'setReceiveVersion',
        TMode
    > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setReceiveVersion'
    }
        : UseContractWriteConfig<
        typeof zeroStarsABI,
        'setReceiveVersion',
        TMode
    > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setReceiveVersion'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'setReceiveVersion', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'setReceiveVersion',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"setSaleState"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsSetSaleState<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'setSaleState'
        >['request']['abi'],
        'setSaleState',
        TMode
    > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setSaleState'
    }
        : UseContractWriteConfig<typeof zeroStarsABI, 'setSaleState', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSaleState'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'setSaleState', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'setSaleState',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"setSendVersion"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsSetSendVersion<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'setSendVersion'
        >['request']['abi'],
        'setSendVersion',
        TMode
    > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setSendVersion'
    }
        : UseContractWriteConfig<typeof zeroStarsABI, 'setSendVersion', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSendVersion'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'setSendVersion', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'setSendVersion',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"setTrustedRemote"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsSetTrustedRemote<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'setTrustedRemote'
        >['request']['abi'],
        'setTrustedRemote',
        TMode
    > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setTrustedRemote'
    }
        : UseContractWriteConfig<typeof zeroStarsABI, 'setTrustedRemote', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setTrustedRemote'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'setTrustedRemote', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'setTrustedRemote',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"setTrustedRemoteAddress"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsSetTrustedRemoteAddress<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'setTrustedRemoteAddress'
        >['request']['abi'],
        'setTrustedRemoteAddress',
        TMode
    > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setTrustedRemoteAddress'
    }
        : UseContractWriteConfig<
        typeof zeroStarsABI,
        'setTrustedRemoteAddress',
        TMode
    > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setTrustedRemoteAddress'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<
        typeof zeroStarsABI,
        'setTrustedRemoteAddress',
        TMode
    >({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'setTrustedRemoteAddress',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"transferFrom"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsTransferFrom<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'transferFrom'
        >['request']['abi'],
        'transferFrom',
        TMode
    > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferFrom'
    }
        : UseContractWriteConfig<typeof zeroStarsABI, 'transferFrom', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferFrom'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'transferFrom', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'transferFrom',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsTransferOwnership<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'transferOwnership'
        >['request']['abi'],
        'transferOwnership',
        TMode
    > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferOwnership'
    }
        : UseContractWriteConfig<
        typeof zeroStarsABI,
        'transferOwnership',
        TMode
    > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'transferOwnership', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'transferOwnership',
        ...config,
    } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"withdraw"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsWithdraw<
    TMode extends WriteContractMode = undefined,
    TChainId extends number = keyof typeof zeroStarsAddress,
>(
    config: TMode extends 'prepared'
        ? UseContractWriteConfig<
        PrepareWriteContractResult<
            typeof zeroStarsABI,
            'withdraw'
        >['request']['abi'],
        'withdraw',
        TMode
    > & { address?: Address; chainId?: TChainId; functionName?: 'withdraw' }
        : UseContractWriteConfig<typeof zeroStarsABI, 'withdraw', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'withdraw'
    } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractWrite<typeof zeroStarsABI, 'withdraw', TMode>({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'withdraw',
        ...config,
    } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsWrite<TFunctionName extends string>(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, TFunctionName>,
        'abi' | 'address'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"approve"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsApprove(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'approve'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'approve',
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"burn"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsBurn(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'burn'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'burn',
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, 'burn'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"crossChain"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsCrossChain(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'crossChain'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'crossChain',
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, 'crossChain'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"forceResumeReceive"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsForceResumeReceive(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'forceResumeReceive'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'forceResumeReceive',
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, 'forceResumeReceive'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"lzReceive"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsLzReceive(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'lzReceive'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'lzReceive',
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, 'lzReceive'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"mint"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsMint(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'mint'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork();
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'mint',
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, 'mint'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"nonblockingLzReceive"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsNonblockingLzReceive(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'nonblockingLzReceive'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'nonblockingLzReceive',
        ...config,
    } as UsePrepareContractWriteConfig<
        typeof zeroStarsABI,
        'nonblockingLzReceive'
    >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsRenounceOwnership(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'renounceOwnership'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'renounceOwnership',
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, 'renounceOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"retryMessage"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsRetryMessage(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'retryMessage'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'retryMessage',
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, 'retryMessage'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsSafeTransferFrom(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'safeTransferFrom'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'safeTransferFrom',
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, 'safeTransferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsSetApprovalForAll(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'setApprovalForAll'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'setApprovalForAll',
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, 'setApprovalForAll'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"setConfig"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsSetConfig(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'setConfig'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'setConfig',
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, 'setConfig'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"setMinDstGas"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsSetMinDstGas(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'setMinDstGas'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'setMinDstGas',
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, 'setMinDstGas'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"setPayloadSizeLimit"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsSetPayloadSizeLimit(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'setPayloadSizeLimit'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'setPayloadSizeLimit',
        ...config,
    } as UsePrepareContractWriteConfig<
        typeof zeroStarsABI,
        'setPayloadSizeLimit'
    >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"setPrecrime"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsSetPrecrime(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'setPrecrime'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'setPrecrime',
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, 'setPrecrime'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"setReceiveVersion"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsSetReceiveVersion(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'setReceiveVersion'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'setReceiveVersion',
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, 'setReceiveVersion'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"setSaleState"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsSetSaleState(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'setSaleState'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'setSaleState',
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, 'setSaleState'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"setSendVersion"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsSetSendVersion(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'setSendVersion'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'setSendVersion',
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, 'setSendVersion'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"setTrustedRemote"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsSetTrustedRemote(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'setTrustedRemote'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'setTrustedRemote',
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, 'setTrustedRemote'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"setTrustedRemoteAddress"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsSetTrustedRemoteAddress(
    config: Omit<
        UsePrepareContractWriteConfig<
            typeof zeroStarsABI,
            'setTrustedRemoteAddress'
        >,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'setTrustedRemoteAddress',
        ...config,
    } as UsePrepareContractWriteConfig<
        typeof zeroStarsABI,
        'setTrustedRemoteAddress'
    >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"transferFrom"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsTransferFrom(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'transferFrom'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'transferFrom',
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, 'transferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsTransferOwnership(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'transferOwnership'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'transferOwnership',
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, 'transferOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zeroStarsABI}__ and `functionName` set to `"withdraw"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function usePrepareZeroStarsWithdraw(
    config: Omit<
        UsePrepareContractWriteConfig<typeof zeroStarsABI, 'withdraw'>,
        'abi' | 'address' | 'functionName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return usePrepareContractWrite({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        functionName: 'withdraw',
        ...config,
    } as UsePrepareContractWriteConfig<typeof zeroStarsABI, 'withdraw'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zeroStarsABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsEvent<TEventName extends string>(
    config: Omit<
        UseContractEventConfig<typeof zeroStarsABI, TEventName>,
        'abi' | 'address'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractEvent({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        ...config,
    } as UseContractEventConfig<typeof zeroStarsABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zeroStarsABI}__ and `eventName` set to `"Approval"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsApprovalEvent(
    config: Omit<
        UseContractEventConfig<typeof zeroStarsABI, 'Approval'>,
        'abi' | 'address' | 'eventName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractEvent({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        eventName: 'Approval',
        ...config,
    } as UseContractEventConfig<typeof zeroStarsABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zeroStarsABI}__ and `eventName` set to `"ApprovalForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsApprovalForAllEvent(
    config: Omit<
        UseContractEventConfig<typeof zeroStarsABI, 'ApprovalForAll'>,
        'abi' | 'address' | 'eventName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractEvent({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        eventName: 'ApprovalForAll',
        ...config,
    } as UseContractEventConfig<typeof zeroStarsABI, 'ApprovalForAll'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zeroStarsABI}__ and `eventName` set to `"MessageFailed"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsMessageFailedEvent(
    config: Omit<
        UseContractEventConfig<typeof zeroStarsABI, 'MessageFailed'>,
        'abi' | 'address' | 'eventName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractEvent({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        eventName: 'MessageFailed',
        ...config,
    } as UseContractEventConfig<typeof zeroStarsABI, 'MessageFailed'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zeroStarsABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsOwnershipTransferredEvent(
    config: Omit<
        UseContractEventConfig<typeof zeroStarsABI, 'OwnershipTransferred'>,
        'abi' | 'address' | 'eventName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractEvent({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        eventName: 'OwnershipTransferred',
        ...config,
    } as UseContractEventConfig<typeof zeroStarsABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zeroStarsABI}__ and `eventName` set to `"ReceivedNFT"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsReceivedNftEvent(
    config: Omit<
        UseContractEventConfig<typeof zeroStarsABI, 'ReceivedNFT'>,
        'abi' | 'address' | 'eventName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractEvent({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        eventName: 'ReceivedNFT',
        ...config,
    } as UseContractEventConfig<typeof zeroStarsABI, 'ReceivedNFT'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zeroStarsABI}__ and `eventName` set to `"RetryMessageSuccess"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsRetryMessageSuccessEvent(
    config: Omit<
        UseContractEventConfig<typeof zeroStarsABI, 'RetryMessageSuccess'>,
        'abi' | 'address' | 'eventName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractEvent({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        eventName: 'RetryMessageSuccess',
        ...config,
    } as UseContractEventConfig<typeof zeroStarsABI, 'RetryMessageSuccess'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zeroStarsABI}__ and `eventName` set to `"SetMinDstGas"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsSetMinDstGasEvent(
    config: Omit<
        UseContractEventConfig<typeof zeroStarsABI, 'SetMinDstGas'>,
        'abi' | 'address' | 'eventName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractEvent({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        eventName: 'SetMinDstGas',
        ...config,
    } as UseContractEventConfig<typeof zeroStarsABI, 'SetMinDstGas'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zeroStarsABI}__ and `eventName` set to `"SetPrecrime"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsSetPrecrimeEvent(
    config: Omit<
        UseContractEventConfig<typeof zeroStarsABI, 'SetPrecrime'>,
        'abi' | 'address' | 'eventName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractEvent({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        eventName: 'SetPrecrime',
        ...config,
    } as UseContractEventConfig<typeof zeroStarsABI, 'SetPrecrime'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zeroStarsABI}__ and `eventName` set to `"SetTrustedRemote"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsSetTrustedRemoteEvent(
    config: Omit<
        UseContractEventConfig<typeof zeroStarsABI, 'SetTrustedRemote'>,
        'abi' | 'address' | 'eventName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractEvent({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        eventName: 'SetTrustedRemote',
        ...config,
    } as UseContractEventConfig<typeof zeroStarsABI, 'SetTrustedRemote'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zeroStarsABI}__ and `eventName` set to `"SetTrustedRemoteAddress"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsSetTrustedRemoteAddressEvent(
    config: Omit<
        UseContractEventConfig<typeof zeroStarsABI, 'SetTrustedRemoteAddress'>,
        'abi' | 'address' | 'eventName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractEvent({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        eventName: 'SetTrustedRemoteAddress',
        ...config,
    } as UseContractEventConfig<typeof zeroStarsABI, 'SetTrustedRemoteAddress'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zeroStarsABI}__ and `eventName` set to `"Transfer"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xBA687095255e51B0FB7BaAa863f158f5224aDfCA)
 * - [__View Contract on Zk Sync Era Testnet Zk Explorer__](https://goerli.explorer.zksync.io/address/0x07bb9324E15F38B64c765e7C95FBEf067518048A)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x35f96640e07b1b94cfB5F5aD6DB26AC07ad2deab)
 */
export function useZeroStarsTransferEvent(
    config: Omit<
        UseContractEventConfig<typeof zeroStarsABI, 'Transfer'>,
        'abi' | 'address' | 'eventName'
    > & { chainId?: keyof typeof zeroStarsAddress } = {} as any,
) {
    const {chain} = useNetwork()
    const chainId = config.chainId ?? chain?.id
    return useContractEvent({
        abi: zeroStarsABI,
        address: zeroStarsAddress[chainId as keyof typeof zeroStarsAddress],
        eventName: 'Transfer',
        ...config,
    } as UseContractEventConfig<typeof zeroStarsABI, 'Transfer'>)
}
